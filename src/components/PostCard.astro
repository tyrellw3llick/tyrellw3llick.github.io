---
import type { CollectionEntry } from 'astro:content';

interface Props {
	post: CollectionEntry<'posts'>;
}

const { post } = Astro.props;
const { title, description, pubDate, image, tags } = post.data;

const displayDate = new Date(pubDate).toLocaleDateString('en-US', {
	year: 'numeric',
	month: 'short',
	day: 'numeric',
});
---
<a href={`/blog/${post.slug}/`} class="block group bg-neutral-900/50 hover:bg-neutral-800/70 border border-neutral-800/80 rounded-lg shadow-md overflow-hidden transition-all duration-300 hover:shadow-lg hover:border-neutral-700/80 no-underline">
    {image && (
        <img src={image.src} alt={image.alt} class="w-full h-40 object-fill transition-transform duration-300 group-hover:scale-105" loading="lazy" width="400" height="225" />
    )}
    <div class="p-5 min-h-70 max-h-70">
        <h3 class="text-lg font-semibold mb-2 text-neutral-100 group-hover:text-[var(--accent-color-blue)] transition-colors duration-200">{title}</h3>
        <p class="text-sm text-neutral-400 mb-3 line-clamp-5 overflow-scroll">{description}</p>
        <time class="text-xs text-neutral-500 block mb-3" datetime={pubDate.toISOString()}>{displayDate}</time>
        {tags && tags.length > 0 && (
            <div class="flex flex-wrap gap-1 mt-auto">
                {tags.slice(0, 3).map(tag => (
                    <span class="text-xs bg-neutral-700/50 text-neutral-300 px-2 py-0.5 rounded">
                        #{tag}
                    </span>
                ))}
            </div>
        )}
    </div>
</a>

<style>
.line-clamp-3 {
   overflow: hidden;
   display: -webkit-box;
   -webkit-box-orient: vertical;
   -webkit-line-clamp: 3;
}
</style>
